<system>
  log_level debug
</system>

<source>
  @type forward
  port 24224
  bind 0.0.0.0
</source>

# Step 1: Remove ANSI color codes
<filter **>
  @type record_transformer
  enable_ruby true
  <record>
    log ${record["log"].gsub(/\e\[[0-9;]*m/, '')}
  </record>
</filter>

# Step 2: Parse the log to extract `requestId`
<filter **>
  @type parser
  key_name log
  reserve_data true  # Keeps the original fields if parsing fails
  <parse>
    @type regexp
    # Update the regex to match logs with or without extra fields
    expression /RequestId=(?<requestId>[a-zA-Z0-9-]+)\s.*$/
    time_key time
    time_format %Y-%m-%dT%H:%M:%S.%L%z
  </parse>
</filter>

# Step 3: Transform the record, keeping the extracted information
<filter **>
  @type record_transformer
  enable_ruby true
  <record>
    # Set `log` to `remaining_log` if available, otherwise keep the original `log` field
    log ${record["remaining_log"] || record["log"]}
    # Add `requestId` if available; set to "N/A" if missing
    requestId ${record["requestId"] || "N/A"}
  </record>
</filter>

<match **>
  @type stdout
  format json
  time_format %Y-%m-%dT%H:%M:%S.%L%z
  include_tag_key true
  tag_key tag
</match>

# <match **>
#   @type forward
#   # Forward to another destination
# </match>
